#!/usr/bin/env bash

set -e
set -o pipefail

. ~/.nvm/nvm.sh
nvm use 0.10

LIBCURL_VERSION=system
GLFW_VERSION=a21f2377
LIBPNG_VERSION=1.6.13
SQLITE_VERSION=system
LIBUV_VERSION=0.10.28

mason install libcurl ${LIBCURL_VERSION}
mason install glfw ${GLFW_VERSION}
mason install libpng ${LIBPNG_VERSION}
mason install sqlite ${SQLITE_VERSION}
mason install libuv ${LIBUV_VERSION}

BOOST_ROOT=/usr
if [ -d '/usr/local/boost' ]; then BOOST_ROOT='/usr/local' ; fi

function quote_flags {
    python -c "import sys, re; print re.split('(?<!-framework)\s+', ' '.join(sys.argv[1:]))" "$@"
}

echo "# Do not edit. Generated by the configure script.
{
  'target_defaults': {
    'cflags': [],
    'default_configuration': 'Release',
    'defines': [],
    'include_dirs': [],
    'libraries': []
  },
  'variables': {
    'node': '$(which node)',
    'npm': '$(which npm)',
    'python': '$(which python)',
    'boost_root': '/usr/local',
    'curl_cflags': $(quote_flags $(mason cflags libcurl ${LIBCURL_VERSION})),
    'curl_libraries': $(quote_flags $(mason ldflags libcurl ${LIBCURL_VERSION})),
    'glfw3_cflags': $(quote_flags $(mason cflags glfw ${GLFW_VERSION})),
    'glfw3_libraries': $(quote_flags $(mason ldflags glfw ${GLFW_VERSION})),
    'png_cflags': $(quote_flags $(mason cflags libpng ${LIBPNG_VERSION})),
    'png_libraries': $(quote_flags $(mason ldflags libpng ${LIBPNG_VERSION})),
    'sqlite3_cflags': $(quote_flags $(mason cflags sqlite ${SQLITE_VERSION})),
    'sqlite3_libraries': $(quote_flags $(mason ldflags sqlite ${SQLITE_VERSION})),
    'uv_cflags': $(quote_flags $(mason cflags libuv ${LIBUV_VERSION})),
    'uv_libraries': $(quote_flags $(mason ldflags libuv ${LIBUV_VERSION})),
  }
}" > config.gypi

cat config.gypi
